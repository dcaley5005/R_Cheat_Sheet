### https://www.udemy.com/course/r-tidyverse-reporting-and-analytics-for-excel-users/learn/lecture/8797450#overview
library(DT)
mpg %>% datatable()
mpg %>% datatable(rownames = F)
mpg %>% datatable(rownames = F) %>%
formatCurrency("displ",currency = "$", digits = 2)
mpg %>% datatable(rownames = F) %>%
formatCurrency("displ",currency = "$", digits = 2)
ctyPercentile <- mpg$cty %>% quantile(c(.25,.75))
mpg %>% datatable(rownames = F) %>%
formatCurrency("displ",currency = "$", digits = 2) %>%
formatStyle("cty",
backgroundColor = styleInterval(ctyPercentile,c("green","yellow","red")),
color = styleInterval(ctyPercentile,c("white","blue","white"))
) %>%
formatStyle("hwy",background = styleColorBar(mpg$hwy,"steelblue"))
knitr::opts_chunk$set(fig.path = "README_figs/README-")
library(tidyverse)
library(plotly)
library(DT)
df_census_data <- read_csv("census_bureau.csv")
census_data <- df_census_data %>% filter(census_current_flag == TRUE &
state_abb != "AK",
state_abb != "HI",
state_abb != "DC") %>%
mutate(state_name = tolower(state_name))
#now make an analysis from the historical data from past 9 years
census_data %>% ggplot(aes(reorder(state_abb,desc(population)), population)) +
geom_col(color = "red", fill = "white") +
labs(x = "State Name", y = "Population", title = "State Population") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 80, vjust = 0.5, hjust = 1)) +
scale_y_continuous(labels = comma) +
theme(axis.text.x = element_text(angle = 90),
text = element_text(size= 20))
#now make an analysis from the historical data from past 9 years
census_data %>% ggplot(aes(reorder(state_abb,desc(population)), population)) +
geom_col(color = "red", fill = "white") +
labs(x = "State Name", y = "Population", title = "State Population") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 80, vjust = 0.5, hjust = 1)) +
scale_y_continuous(labels = scales::comma) +
theme(axis.text.x = element_text(angle = 90),
text = element_text(size= 20))
#now make an analysis from the historical data from past 9 years
census_data %>% ggplot(aes(reorder(state_abb,desc(population)), median_household_income)) +
geom_col(color = "red", fill = "white") +
labs(x = "State Name", y = "Median Income", title = "State Population") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 80, vjust = 0.5, hjust = 1)) +
scale_y_continuous(labels = scales::comma) +
theme(axis.text.x = element_text(angle = 90),
text = element_text(size= 20))
knitr::opts_chunk$set(fig.path = "README_figs/README-")
library(tidyverse)
library(plotly)
library(DT)
covid <- read_csv("https://raw.githubusercontent.com/RamiKrispin/coronavirus/master/csv/coronavirus.csv")
covid <- covid  %>%
group_by(date, country, type) %>%
summarize(cases = sum(cases)) %>%
ungroup() %>%
mutate(is_china = if_else(country == "China","China","Not China"))
confirmed_cases_china_vs_world <- covid %>%
filter(date <= '2020-03-15' & type == "confirmed") %>%
group_by(is_china, date) %>%
summarise(cases = sum(cases)) %>%
mutate(cum_cases = cumsum(cases))
glimpse(confirmed_cases_china_vs_world)
ggplot(confirmed_cases_china_vs_world, aes(x = date, y = cum_cases, group = is_china, color = is_china)) +
geom_line() +
geom_point() +
scale_y_continuous(labels = scales::comma, limits = c(0, 85000)) +
labs(
title = "Confirmed Cases in China vs. The World",
y = "Cumulative Confirmed Cases",
x = "Date",
color = "Is China"
) +
theme(
text = element_text(size = 12),
axis.text.x =  element_text(size = 12, angle = 45, hjust = 1),
axis.text.y = element_text(size = 12)
)
df_census_data <- read_csv("census_bureau.csv")
census_data <- df_census_data %>% filter(census_current_flag == TRUE &
state_abb != "AK",
state_abb != "HI",
state_abb != "DC") %>%
mutate(state_name = tolower(state_name))
#now make an analysis from the historical data from past 9 years
census_data %>% ggplot(aes(reorder(state_abb,desc(population)), median_household_income)) +
geom_col(color = "red", fill = "white") +
labs(x = "State Name", y = "Median Income", title = "State Population") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 80, vjust = 0.5, hjust = 1)) +
scale_y_continuous(labels = scales::comma) +
theme(axis.text.x = element_text(angle = 90),
text = element_text(size= 20))
ggplot(mpg) +
geom_boxplot(mapping = aes(x=class, y=hwy))  +
scale_y_continuous(labels = scales::comma) +
labs(
title = "Car Boxplot",
y = "Highway",
x = "Class"
) +
theme(
text = element_text(size = 12),
axis.text.x =  element_text(size = 12, angle = 45, hjust = 1),
axis.text.y = element_text(size = 12)
)
ggplot(mpg) +
geom_jitter(aes(x=displ, y = hwy/100)) +
scale_y_continuous(labels = scales::percent, limits = c(.10, .45)) +
labs(
title = "Scatter Plot",
y = "Highway",
x = "Display"
) +
theme(
text = element_text(size = 12),
axis.text.x =  element_text(size = 12, angle = 45, hjust = 1),
axis.text.y = element_text(size = 12)
)
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_point() +
geom_smooth()
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_point() +
geom_smooth(method = 'lm')
ggplot(mpg,mapping = aes(x=displ,y=hwy)) +
geom_jitter(mapping=aes(color=class)) +
geom_smooth() +
annotate("rect",xmin=1.5,xmax=2,ymin=40,ymax = 45, color="red", alpha = 0.3) +
annotate("text",x=3,y=43,label="Let's highlight these \n outliers") +
ggtitle("Lets lavel our chart","Add your subtitle here")
who_events <- tribble(
~ date, ~ event,
"2020-01-30", "Global health\nemergency declared",
"2020-03-11", "Pandemic\ndeclared",
"2020-02-13", "China reporting\nchange"
) %>% mutate(date = as.Date(date))
plt_cum_confirmed_cases_china_vs_world <- ggplot(confirmed_cases_china_vs_world) +
geom_line(aes(x = date, y = cum_cases, group = is_china, color = is_china)) +
ylab("Cumulative Confirmed Cases")
plt_cum_confirmed_cases_china_vs_world +
geom_vline(aes(xintercept = date), data = who_events, linetype = "dashed") +
geom_text(aes(x = date ,label = event), data = who_events, y = 35000)
# Filter for China, from Feb 15
china_after_feb15 <- confirmed_cases_china_vs_world %>%
filter(is_china == "China", date >= "2020-02-15")
# Using china_after_feb15, draw a line plot cum_cases vs. date
# Add a smooth trend line using linear regression, no error bars
ggplot(china_after_feb15, aes(x = date, y = cum_cases)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE) +
ylab("Cumulative confirmed cases")
# Filter confirmed_cases_china_vs_world for not China
not_china <- confirmed_cases_china_vs_world  %>%
filter(is_china != 'China')
# Using not_china, draw a line plot cum_cases vs. date
# Add a smooth trend line using linear regression, no error bars
plt_not_china_trend_lin <- ggplot(not_china, aes(x = date, y = cum_cases)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE) +
ylab("Cumulative confirmed cases")
# See the result
plt_not_china_trend_lin
### From the plot above, we can see a straight line does not fit well at all, and the rest of the world is growing much faster
### than linearly. What if we added a logarithmic scale to the y-axis?
plt_not_china_trend_lin +
scale_y_log10()
ggplot(mpg) +
geom_jitter(aes(x=displ, y = hwy,color=class)) +
facet_wrap(~class)
ggplot(mpg) +
geom_jitter(aes(x=displ, y = hwy,color=class)) +
facet_wrap(year~class)
#***************************************************************************
### Interactive Data Tables
### https://www.udemy.com/course/r-tidyverse-reporting-and-analytics-for-excel-users/learn/lecture/8797450#overview
library(DT)
mpg %>% datatable()
mpg %>% datatable(rownames = F)
mpg %>% datatable(rownames = F) %>%
formatCurrency("displ",currency = "$", digits = 2)
mpg %>% datatable(rownames = F) %>%
formatCurrency("displ",currency = "$", digits = 2)
ctyPercentile <- mpg$cty %>% quantile(c(.25,.75))
mpg %>% datatable(rownames = F) %>%
formatCurrency("displ",currency = "$", digits = 2) %>%
formatStyle("cty",
backgroundColor = styleInterval(ctyPercentile,c("green","yellow","red")),
color = styleInterval(ctyPercentile,c("white","blue","white"))
) %>%
formatStyle("hwy",background = styleColorBar(mpg$hwy,"steelblue"))
df_census_data <- read_csv("census_bureau.csv")
census_data <- df_census_data %>% filter(census_current_flag == TRUE &
state_abb != "AK",
state_abb != "HI",
state_abb != "DC") %>%
mutate(state_name = tolower(state_name))
#now make an analysis from the historical data from past 9 years
census_data %>% ggplot(aes(reorder(state_abb,desc(population)), median_household_income)) +
geom_col(color = "red", fill = "white") +
labs(x = "State Name", y = "Median Income", title = "State Population") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 80, vjust = 0.5, hjust = 1)) +
scale_y_continuous(labels = scales::comma) +
theme(axis.text.x = element_text(angle = 90),
text = element_text(size= 20))
mpg %>% datatable(rownames = F) %>%
formatCurrency("displ",currency = "$", digits = 2)
mpg %>% datatable(rownames = F) %>%
formatCurrency("displ",currency = "$", digits = 2)
ctyPercentile <- mpg$cty %>% quantile(c(.25,.75))
mpg %>% datatable(rownames = F) %>%
formatCurrency("displ",currency = "$", digits = 2) %>%
formatStyle("cty",
backgroundColor = styleInterval(ctyPercentile,c("green","yellow","red")),
color = styleInterval(ctyPercentile,c("white","blue","white"))
) %>%
formatStyle("hwy",background = styleColorBar(mpg$hwy,"steelblue"))
#now make an analysis from the historical data from past 9 years
census_data %>% ggplot(aes(reorder(state_abb,desc(population)), median_household_income)) +
geom_col(color = "red", fill = "white") +
labs(x = "State Name", y = "Median Income", title = "State Population") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 80, vjust = 0.5, hjust = 1)) +
scale_y_continuous(labels = scales::comma) +
theme(axis.text.x = element_text(angle = 90),
text = element_text(size= 12))
install.packages("leaflet")
install.packages("leaflet")
knitr::opts_chunk$set(fig.path = "README_figs/README-")
library(tidyverse)
library(plotly)
library(DT)
library(leaflet)
leaflet() %>%
addTiles()
leaflet() %>%
addProviderTiles(provider = "CartoDB")
library(ggmap)
white_house <- "1600 Pennsylvania Avenue NW, Washington, DC 20500"
geocode(white_house)
geocode("the white house")
geocode(white_house)
white_house <-  geocode(white_house)
View(white_house)
leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(white_house$lat, white_house$lon)
leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(white_house$lat, white_house$lon, zoom = 20)
leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = white_house$lon, lat white_house$lat, zoom = 20)
leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = white_house$lon, lat= white_house$lat, zoom = 20)
leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = white_house$lon, lat= white_house$lat, zoom = 20)
leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = white_house$lon, lat= white_house$lat, zoom = 100)
leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = white_house$lon, lat= white_house$lat, zoom = 1)
leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = white_house$lon, lat= white_house$lat, zoom = 10)
leaflet(options = leafletOptions(
# Set minZoom and dragging
minZoom = 12, dragging = FALSE))  %>%
addProviderTiles("CartoDB")  %>%
# Set default zoom level
setView(lng = white_house$lon, lat= white_house$lat, zoom = 10)
leaflet(options = leafletOptions(
# Set minZoom and dragging
minZoom = 10, dragging = FALSE))  %>%
addProviderTiles("CartoDB")  %>%
# Set default zoom level
setView(lng = white_house$lon, lat= white_house$lat, zoom = 15)
leaflet(options = leafletOptions(
# Set minZoom and dragging
minZoom = 12.5, dragging = FALSE))  %>%
addProviderTiles("CartoDB")  %>%
# Set default zoom level
setView(lng = white_house$lon, lat= white_house$lat, zoom = 15) %>%
# Set max bounds of map
setMaxBounds(lng1 = dc_hq$lon[2] + .05,
lat1 = dc_hq$lat[2] + .05,
lng2 = dc_hq$lon[2] - .05,
lat2 = dc_hq$lat[2] - .05)
leaflet(options = leafletOptions(
# Set minZoom and dragging
minZoom = 12.5, dragging = FALSE))  %>%
addProviderTiles("CartoDB")  %>%
# Set default zoom level
setView(lng = white_house$lon, lat= white_house$lat, zoom = 15)
white_house$lon[2]
leaflet(options = leafletOptions(
# Set minZoom and dragging
minZoom = 12.5, dragging = FALSE))  %>%
addProviderTiles("CartoDB")  %>%
# Set default zoom level
setView(lng = white_house$lon, lat= white_house$lat, zoom = 15) %>%
# Set max bounds of map
setMaxBounds(lng1 = white_house$lon + .05,
lat1 = white_house$lat + .05,
lng2 = white_house$lon - .05,
lat2 = white_house$lat - .05)
leaflet(options = leafletOptions(
# Set minZoom and dragging
minZoom = 12.5, dragging = FALSE))  %>%
addProviderTiles("CartoDB")  %>%
# Set default zoom level
setView(lng = white_house$lon, lat= white_house$lat, zoom = 15) %>%
# Set max bounds of map
setMaxBounds(lng1 = white_house$lon + .05,
lat1 = white_house$lat + .05,
lng2 = white_house$lon - .05,
lat2 = white_house$lat - .05)
leaflet(options = leafletOptions(
# Set minZoom and dragging
minZoom = 12.5, dragging = FALSE))  %>%
addProviderTiles("CartoDB")  %>%
# Set default zoom level
setView(lng = white_house$lon, lat= white_house$lat, zoom = 15) %>%
# Set max bounds of map
setMaxBounds(lng1 = white_house$lon + .05,
lat1 = white_house$lat + .05,
lng2 = white_house$lon - .05,
lat2 = white_house$lat - .05)
leaflet(options = leafletOptions(
# Set minZoom and dragging
minZoom = 12.5, dragging = TRUE))  %>%
addProviderTiles("CartoDB")  %>%
# Set default zoom level
setView(lng = white_house$lon, lat= white_house$lat, zoom = 15) %>%
# Set max bounds of map
setMaxBounds(lng1 = white_house$lon + .05,
lat1 = white_house$lat + .05,
lng2 = white_house$lon - .05,
lat2 = white_house$lat - .05)
leaflet(options = leafletOptions(
# Set minZoom and dragging
minZoom = 12.5, dragging = FALSE))  %>%
addProviderTiles("CartoDB")  %>%
# Set default zoom level
setView(lng = white_house$lon, lat= white_house$lat, zoom = 15) %>%
# Set max bounds of map
setMaxBounds(lng1 = white_house$lon + .05,
lat1 = white_house$lat + .05,
lng2 = white_house$lon - .05,
lat2 = white_house$lat - .05)
# add markets
leaflet() %>%
addProviderTiles("CartoDB") %>%
addMarkers(lng = white_house$lon, lat = white_house$lat)
# add multiple markers
geocode("Apple HQ")
# add multiple markers
apple_hq <- geocode("Apple HQ")
View(apple_hq)
# add multiple markers
apple_hq <- geocode("Apple HQ") %>%  union_all(white_house)
View(apple_hq)
# add markers
leaflet() %>%
addProviderTiles("CartoDB") %>%
addMarkers(lng = white_house$lon, lat = white_house$lat)
# add markers
leaflet() %>%
addProviderTiles("CartoDB") %>%
addMarkers(lng = white_house$lon, lat = white_house$lat)
# add markers
leaflet() %>%
addProviderTiles("CartoDB") %>%
addMarkers(lng = white_house$lon, lat = white_house$lat)
leaflet() %>%
addProviderTiles("CartoDB") %>%
addMarkers(lng = apple_hq$lon, lat = apple_hq$lat)
white_house$places <- "White House"
apple_hq$places <- "Apple HQ"
multiple_markers <- apple_hq %>% union_all(white_house)
leaflet() %>%
addProviderTiles("CartoDB") %>%
addMarkers(lng = multiple_markers$lon, lat = multiple_markers$lat, popup = multiple_markers$places)
leaflet() %>%
addProviderTiles("CartoDB") %>%
addMarkers(lng = multiple_markers$lon, lat = multiple_markers$lat, popup = multiple_markers$places)
multiple_markers %>%  leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = lon, lat= lat, zoom = 10)
multiple_markers
multiple_markers <- apple_hq %>% union_all(white_house) %>% rename(lat, latitude)
multiple_markers <- apple_hq %>% union_all(white_house) %>% rename(lat = latitude)
multiple_markers
multiple_markers <- apple_hq %>% union_all(white_house) %>% rename(latitude = lat)
multiple_markers %>%  leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = lon, lat= latitude, zoom = 10)
multiple_markers <- apple_hq %>% union_all(white_house) %>% rename(latitude = lat)
multiple_markers %>%  leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = lon, lat= latitude, zoom = 10)
multiple_markers %>%  leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = lon, lat= latitude, zoom = 10)
multiple_markers <- apple_hq %>% union_all(white_house) %>% rename(latitude = lat)
multiple_markers %>%  leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = lon, lat= latitude, zoom = 10)
multiple_markers
multiple_markers %>%  leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = lon, lat= multiple_markers$latitude, zoom = 10)
multiple_markers %>%  leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = multiple_markers$lon, lat= multiple_markers$latitude, zoom = 10)
leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = multiple_markers$lon, lat= multiple_markers$latitude, zoom = 10)
leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = multiple_markers$lon, lat= multiple_markers$latitude, zoom = 10)
multiple_markers$lon
leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = apple_hq$lon, lat= apple_hq$latitude, zoom = 10)
leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = apple_hq$lon, lat= apple_hq$lat, zoom = 10)
apple_hq
apple_hq <- geocode("Apple HQ")
apple_hq <- geocode("Apple HQ")
apple_hq
apple_hq$places <- "Apple HQ"
leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = apple_hq$lon, lat= apple_hq$lat, zoom = 10)
leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = apple_hq$lon, lat= apple_hq$lat, zoom = 20)
leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = apple_hq$lon, lat= apple_hq$lat, zoom = 15)
apple_hq %>% leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = lon, lat= lat, zoom = 15)
leaflet() %>%
addProviderTiles(provider = "CartoDB") %>%
setView(lng = apple_hq$lon, lat= apple_hq$lat, zoom = 15)
# Dragging Option
leaflet(options = leafletOptions(
# Set minZoom and dragging
minZoom = 12.5, dragging = FALSE))  %>%
addProviderTiles("CartoDB")  %>%
# Set default zoom level
setView(lng = white_house$lon, lat= white_house$lat, zoom = 15) %>%
# Set max bounds of map
setMaxBounds(lng1 = white_house$lon + .05,
lat1 = white_house$lat + .05,
lng2 = white_house$lon - .05,
lat2 = white_house$lat - .05)
leaflet() %>%
addProviderTiles("CartoDB") %>%
addMarkers(lng = multiple_markers$lon, lat = multiple_markers$lat, popup = multiple_markers$places)
multiple_markers <- apple_hq %>% union_all(white_house)
leaflet() %>%
addProviderTiles("CartoDB") %>%
addMarkers(lng = multiple_markers$lon, lat = multiple_markers$lat, popup = multiple_markers$places)
leaflet() %>%
addProviderTiles("CartoDB") %>%
addMarkers(lng = multiple_markers$lon, lat = multiple_markers$lat, popup = multiple_markers$places,
clusterOptions = markerClusterOptions())
multiple_markers <- apple_hq %>% union_all(white_house) %>% union_all(white_house)
leaflet() %>%
addProviderTiles("CartoDB") %>%
addMarkers(lng = multiple_markers$lon, lat = multiple_markers$lat, popup = multiple_markers$places,
clusterOptions = markerClusterOptions())
install.packages("modeest")
library(modeest)
mfv(discoveries)
str(discoveries)
glimpse(discoveries)
head(discoveries)
discoveries
?discoveries
sd(discoveries)
range(discoveries)
mean(discoveries)
var(discoveries)
sqrt(var(discoveries))
hist(rnorm(n=120, mean=85, sd=5))
hist(rnorm(n=120, mean=85, sd=15))
hist(rnorm(n=120, mean=85, sd=5))
hist(rnorm(n=120, mean=85, sd=15))
hist(rnorm(n=120, mean=85, sd=5))
hist(rnorm(n=120, mean=85, sd=15))
hist(rnorm(n=120, mean=85, sd=20))
hist(rnorm(n=120, mean=85, sd=15))
hist(rnorm(n=120, mean=85, sd=15))
hist(rnorm(n=120, mean=85, sd=5))
hist(rnorm(n=120, mean=85, sd=15))
hist(rnorm(n=120, mean=85, sd=10))
hist(rnorm(n=1000, mean=85, sd=10))
